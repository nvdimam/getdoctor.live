version: '3'
services:
 broker-rabbitmq:
   image: "rabbitmq:3.7.14-management"
   container_name: broker-rabbitmq
   environment:
     - RABBITMQ_DEFAULT_USER=getdoctor_app
     - RABBITMQ_DEFAULT_PASS=b4h34eP9MYQ2
 db-postgres:
  image: postgres:13.1
  healthcheck:
    test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
    timeout: 45s
    interval: 10s
    retries: 10
  restart: always
  environment:
    - POSTGRES_USER=root
    - POSTGRES_PASSWORD=DB4s21XogYkW
    - APP_DB_USER=getdoctor_app
    - APP_DB_PASS=b4h34eP9MYQ2
    - APP_DB_NAME=getdoctor
  volumes:
    - ./db:/docker-entrypoint-initdb.d/
  ports:
    - 5432:5432
 migration:
   build: .
   environment:
     - APP_ENV=${APP_ENV}
   command: flask db upgrade
   depends_on:
     - db-postgres
 api:
   build: .
   ports:
    - "5000:5000"
   environment:
     - APP_ENV=${APP_ENV}
   depends_on:
     - broker-rabbitmq
     - db-postgres
     - migration
 api-worker:
   build: .
   command: celery -A tasks.celery worker  --loglevel=info
   environment:
     - APP_ENV=${APP_ENV}
   depends_on:
     - broker-rabbitmq
     - db-postgres
     - migration
 api-beat:
   build: .
   command: celery -A tasks.celery beat --loglevel=info
   environment:
     - APP_ENV=${APP_ENV}
   depends_on:
     - broker-rabbitmq
     - db-postgres
     - migration